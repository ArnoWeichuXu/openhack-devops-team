pipeline {
    agent {
        label {
            label 'node3'
            retries 3
        }
    }

    environment {
    WorkDir = "apis/userprofile"
    ImgName = "arnoxuweichu/userprofile"
    ImgTag = "${params.ImgTag}"
    }

    parameters {
    booleanParam defaultValue: true, description: '''True: upload image; False: do not upload image''', name: 'blUploadImage'
    string defaultValue: '1.0', description: 'Set default image tag to 1.0', name: 'ImgTag', trim: true
    }

    stages { 
        stage('Test') {
            agent {
                docker { 
                    image 'node:12-alpine' 
                }
            }
            environment {
                HOME = '.'
            }
            steps {
                dir(WorkDir) {
                    sh 'npm install'
                    sh 'npm run test'
                    sh 'cat userprofile-report.xml ./reports'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker Image $ImgName:$ImgTag ...'
                dir(WorkDir) {
                    sh 'pwd'
                    sh 'sudo docker build -t $ImgName:$ImgTag .'
                }
            }
        }

        stage('Upload Docker Image') {
            when {
  		        expression {return params.blUploadImage}
            }
            steps {
                withCredentials([usernamePassword(credentialsId: 'DockerHub', passwordVariable: 'DockerHubPwd', usernameVariable: 'DockerHubUsr')]) {
                    echo 'Dockerhub Login'
                    sh 'sudo docker login -u $DockerHubUsr -p $DockerHubPwd'
                    sh "sudo docker push ${ImgName}:${params.ImgTag}"
                }
            }
        }
    }

    post {
        always {
            cleanWs()
            sh 'docker images -qa | xargs docker rmi -f'
        }
    }
}